SEN -> LOOP ;
SEN -> IF ;
SEN -> EXP ;
SEN -> JUMP ;
SEN -> DEF ;
SEN -> PRINT ;
SEN -> ASS ;

LOOP -> while EXP : ;
LOOP -> for VARL in VARL : ;

IF -> if EXP : ;
IF -> elif EXP : ;
IF -> else : ;

EXPL -> EXP EXPL' ;
EXPL -> EXPL' ;
EXPL' -> , EXP EXPL' ;
EXPL' -> ~ ;
EXP -> T E' ;
E' -> == T E' ;
E' -> != T E' ;
E' -> ~ ;
T -> F T' ;
T' -> << F T' ;
T' -> >> F T' ;
T' -> ~ ;
F -> G F' ;
F' -> + G F' ;
F' -> - G F' ;
F' -> ~ ;
G -> H G' ;
G' -> * H G' ;
G' -> / H G' ;
G' -> ~ ;
H -> K H' ;
H' -> not K H' ;
H' -> ~ ;
K -> ( EXP ) ;
K -> var FUNC ;

JUMP -> continue ;
JUMP -> break ;
JUMP -> pass ;
JUMP -> return EXP ;

DEF -> def var FUNC : ;

FUNC -> ( VARL ) ;
FUNC -> ~ ;

VARL -> var VARL' ;
VARL -> VARL' ;
VARL' -> , var VARL' ;
VARL' -> ~ ;

ASS -> VARL = EXPL ;

PRINT -> print EXP ;

END

已经测试产生式中FUNC和EXPL模块正确