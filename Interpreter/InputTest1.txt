SEN -> LOOP ;
SEN -> IF ;
SEN -> EXP ;
SEN -> JUMP ;
SEN -> DEF ;
SEN -> PRINT ;
SEN -> ASS ;
LOOP -> while EXP : ;
LOOP -> for VARL in VARL ;
IF -> if EXP : ;
IF -> elif EXP : ;
IF -> ELSE : ;
EXPL -> EXP EXPL' ;
EXPL -> EXPL' ;
EXPL' -> , EXP EXPL' ;
EXPL' -> ~ ;
EXP -> T E' ;
E' -> == T E' ;
E' -> != T E' ;
E' -> ~ ;
T -> F T' ;
T' -> << F T' ;
T' -> >> F T' ;
T' -> ~ ;
F -> G F' ;
F' -> + G F' ;
F' -> - G F' ;
F' -> ~ ;
G -> H G' ;
G' -> * H G' ;
G' -> / H G' ;
G' -> ~ ;
H -> K H' ;
H' -> not K H' ;
H' -> ~ ;
K -> ( EXP ) ;
K -> VARL ;
K -> FUNC ;
JUMP -> continue ;
JUMP -> break ;
JUMP -> pass ;
JUMP -> return EXP : ;
DEF -> def FUNC : ;
FUNC -> VAR ( PARAL ) : ;
PARAL -> PARA PARAL' ;
PARAL -> PARAL' ;
PARAL' -> , PARA PARAL' ;
PARAL' -> ~ ;
PARA -> VAR X ;
X -> = EXP ;
X -> ~ ;
VARL -> VAR VARL' ;
VARL -> VARL' ;
VARL' -> , VAR VARL' ;
VARL' -> ~ ;
ASS -> VARL = EXPL ;
PRINT -> print EXP ;
END